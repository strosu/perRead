BACKEND:

- proper implementation for many to many - DONE

- support for user management:
    - create new user - DONE
    - authenticate as user - DONE
    - restrict access; play with roles, i.e. don't allow any user to craete new articles - DONE
    - add reading tokens to the current user (requires signing in)

- figure out potential controllers: 
    - add reading tokens (under Account)
    - unlock article (under Article?)
    - get Article (under Article) - DONE
    - show unlocked articles; for privacy reasons, maybe don't store the list? need an alrorithm that would hash and see if an article is already unlocked (similar to password checking)
        - alternatively, keep true to the name and don't store anything. Ask for tokens on every single read, since the probability of rereading an article is small.
        - offer both versions when the user registers? easier to not store anything at start, since storing them securely is more work (TBD)
    - Authors controller; need some form of readMe for Authors

- revisit tags, safety around parallel requests

- do some basic search for titles
    - do more advanced search for article contents? grep maybe?

FRONTEND:

- fix concurrency issue when submitting new article and redirecting quickly via Link

- login!!
    - sign up - needs redirecting 
    - sign in - needs redirecting

- input form for creating new article
- rework article presentation "page"
- unlock article UI

- present all articles nicely
- present all authors nicely